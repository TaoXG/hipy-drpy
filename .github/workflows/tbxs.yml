name: Sync Gitee to subfolder via PR

on:
  schedule:
    - cron: '0 16 */2 * *'  # 每两天北京时间 00:00 运行
  workflow_dispatch:

jobs:
  sync_and_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout default branch
        uses: actions/checkout@v3

      - name: Set up Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Restore last synced Gitee commit hash from cache
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: last_sync_commit.txt
          key: gitee-last-sync

      - name: Get latest Gitee commit hash
        id: get_commit
        run: |
          response=$(curl -s https://gitee.com/api/v5/repos/PizazzXS/another-d/branches/master)
          latest_hash=$(echo "$response" | jq -r '.commit.sha')

          echo "Latest commit: $latest_hash"
          echo "latest_hash=$latest_hash" >> $GITHUB_OUTPUT

          if [ -f last_sync_commit.txt ]; then
            last_hash=$(cat last_sync_commit.txt)
          else
            last_hash="none"
          fi

          echo "Last synced: $last_hash"

          if [ "$latest_hash" = "$last_hash" ]; then
            echo "skip_sync=true" >> $GITHUB_OUTPUT
          else
            echo "skip_sync=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no update
        if: steps.get_commit.outputs.skip_sync == 'true'
        run: |
          echo "No update in Gitee repo. Skipping sync."
          exit 0

      - name: Create or switch to sync branch
        run: |
          git checkout -B sync-from-gitee

      - name: Create gitee-source folder and clean it
        run: |
          mkdir -p gitee-source
          rm -rf gitee-source/*

      - name: Download Gitee repo ZIP and extract to gitee-source/
        run: |
          wget -O gitee.zip https://gitee.com/PizazzXS/another-d/repository/archive/master.zip
          unzip gitee.zip
          cp -r another-d-master/* gitee-source/
          rm -rf another-d-master gitee.zip

      - name: Unzip ZIP files inside gitee-source (keep ZIP)
        run: |
          cd gitee-source
          if [ -f "单线路.zip" ]; then unzip -o "单线路.zip"; fi
          if [ -f "多线路.zip" ]; then unzip -o "多线路.zip"; fi
          cd ..

      - name: Commit changes to sync branch
        run: |
          echo "${{ steps.get_commit.outputs.latest_hash }}" > last_sync_commit.txt
          git add gitee-source/ last_sync_commit.txt
          git commit -m "Sync from Gitee and extract zip files" || echo "No changes"

      - name: Push sync branch
        run: |
          git push origin sync-from-gitee --force

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: sync-from-gitee
          title: "🔄 Sync from Gitee: ${{ steps.get_commit.outputs.latest_hash }}"
          body: |
            This PR was created automatically to sync updates from the Gitee repository.
          commit-message: "Sync from Gitee and extract zip files"
          base: master
          delete-branch: true

      - name: Enable auto-merge for PR
        if: steps.cpr.outputs.pull-request-url != ''
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash

  cleanup_runs:
    runs-on: ubuntu-latest
    needs: sync_and_pr
    steps:
      - name: Delete old workflow runs, keep last 10
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 0
          keep_minimum_runs: 10
